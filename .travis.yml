# Integración continua Travis CI

# Lenguaje de programación

language: cpp

# Sistema operativo destino a probar

os: linux

# Distribución del sistema operativo

dist: trusty

# Requerimiento de permisos en Linux

sudo: enabled

# Compiladores a emplear

compiler: 
#  - gcc
   - clang

# Tareas a realizar antes de instalacción

before_install:

# Actualizar

  - sudo apt-get -qq update

# Configurar Git si no lo está

  - if [ ! `git config --get user.email` ]; then `git config --global user.email 'user@example.com'`; fi
  - if [ ! `git config --get user.name` ]; then `git config --global user.name 'Travis CI'`; fi

# En caso de requerir instalar algo para la prueba

install:

# Instalar PortAudiosudo apt-get install libasound-dev
  - sudo apt-get install libasound-dev
  - wget http://www.portaudio.com/archives/pa_stable_v190600_20161030.tgz
  - tar -xzvf  pa_stable_v190600_20161030.tgz
  - cd portaudio
  - ./configure && make
  - sudo make install
  - cd

# Instalar YARP

  - sudo apt install build-essential git
  - sudo apt install libeigen3-dev # Needed for creating YARP lib_math used for kinematics, etc.
  - sudo apt install qtbase5-dev qtdeclarative5-dev qtmultimedia5-dev qtdeclarative5-qtquick2-plugin qtdeclarative5-window-plugin qtdeclarative5-qtmultimedia-plugin qtdeclarative5-controls-plugin qtdeclarative5-dialogs-plugin libqt5svg5
  - sudo apt install libjpeg8-dev # Needed for mjpeg carrier
  - sudo apt install libedit-dev
  - git clone https://github.com/robotology/yarp.git
  - cd yarp && mkdir build && cd build
  - cmake .. -DSKIP_ACE=ON -DCREATE_LIB_MATH=ON -DCREATE_GUIS=ON -DCREATE_OPTIONAL_CARRIERS=ON -DENABLE_yarpcar_mjpeg=ON -DCREATE_DEVICE_LIBRARY_MODULES=ON  -DENABLE_yarpmod_portaudio=ON # configure
  - make -j$(nproc) # Compile
  - sudo make install && sudo ldconfig && cd

# Tareas a ejecutar antes de nuestra prueba

before_script:
  - cd YARP-Streaming-Audio
  - cd programs
  - cd linux
  - cd sender
  - mkdir build
  - cd build
  - cmake ..

# Compilamos

script:
  - make

# En caso de compilación exitosa

after_success:
  - sudo make install
  - sudo make uninstall

# Notificaciones por correo

notifications:
email: true